{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AACJ,yBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;;;6BAEQC,U,EAAY;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKAI,gBAAQI,SAAR,GAAoB,aAAK;AACvBN,kBAAQF,UAAR;AACD,SAFD;;AAIAI,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OAdM,CAAP;AAeD;;;kCAEa;AAAA;;AACZ,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;;AAKA,YAAIC,cAAc,EAAlB;;AAEAF,eAAOP,SAAP,GAAmB,aAAK;AACtB,cAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;AACA,cAAID,KAAJ,EAAW;AACT,gBAAIE,OAAOF,MAAMG,KAAjB;AACAJ,wBAAYK,IAAZ,CACE,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CADF;AAGAR,kBAAMS,QAAN;AACD,WAND,MAMO;AACLzB,oBAAQe,WAAR;AACD;AACF,SAXD;;AAaAF,eAAON,OAAP,GAAiB,aAAK;AACpBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,wCAAP;AACD,SAHD;AAID,OAzBM,CAAP;AA0BD;;;6BAEQ;AAAA;;AACP,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX6B,KAHW,EAAd;;AAKAxB,gBAAQI,SAAR,GAAoB;AAAA,iBAAKN,QAAQ,mCAAR,CAAL;AAAA,SAApB;AACAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,wCAAP;AACD,SAHD;AAID,OAXM,CAAP;AAYD","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\n  constructor(connection) {\n    this._connection = connection;\n    this._store = \"negociacoes\";\n  }\n\n  adiciona(negociacao) {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .add(negociacao);\n\n      request.onsuccess = e => {\n        resolve(negociacao);\n      };\n\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Não foi possível adicionar a negociação\");\n      };\n    });\n  }\n\n  listarTodos() {\n    return new Promise((resolve, reject) => {\n      let cursor = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .openCursor();\n\n      let negociacoes = [];\n\n      cursor.onsuccess = e => {\n        let atual = e.target.result;\n        if (atual) {\n          let dado = atual.value;\n          negociacoes.push(\n            new Negociacao(dado._data, dado._quantidade, dado._valor)\n          );\n          atual.continue();\n        } else {\n          resolve(negociacoes);\n        }\n      };\n\n      cursor.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Não foi possível listar as negociações\");\n      };\n    });\n  }\n\n  apagar() {\n    return new Promise((resolve, reject) => {\n      let request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .clear();\n\n      request.onsuccess = e => resolve(\"Negociações removidas com sucesso\");\n      request.onerror = e => {\n        console.log(e.target.error);\n        reject(\"Não foi possível remove as negociações\");\n      };\n    });\n  }\n}\n"]}